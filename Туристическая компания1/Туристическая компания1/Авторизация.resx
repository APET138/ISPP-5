<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4+L+BSabIPWjvCFrAAAAAElFTkSuQmCC
</value>
  </data>
</root>