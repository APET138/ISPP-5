<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGeYUxB9wAAACBjSFJNAACH
        EAAAjBIAAP1NAACBPgAAWesAARIPAAA85gAAGc66ySIyAAABJmlDQ1BBZG9iZSBSR0IgKDE5OTgpAAAo
        z2NgYDJwdHFyZRJgYMjNKykKcndSiIiMUmA/z8DGwMwABonJxQWOAQE+IHZefl4qAwb4do2BEURf1gWZ
        xUAa4EouKCoB0n+A2CgltTiZgYHRAMjOLi8pAIozzgGyRZKywewNIHZRSJAzkH0EyOZLh7CvgNhJEPYT
        ELsI6Akg+wtIfTqYzcQBNgfClgGxS1IrQPYyOOcXVBZlpmeUKBhaWloqOKbkJ6UqBFcWl6TmFit45iXn
        FxXkFyWWpKYA1ULcBwaCEIWgENMAarTQZKAyAMUDhPU5EBy+jGJnEGIIkFxaVAZlMjIZE+YjzJgjwcDg
        v5SBgeUPQsykl4FhgQ4DA/9UhJiaIQODgD4Dw745AMDGT/0ZOjZcAAAACXBIWXMAAA7DAAAOwwHHb6hk
        AAAfDUlEQVR4Xu3c25Kbx7EF4f3+L+0tkRRnMEgA/6EPtbozI74LliWyqoFx8MLh//vf//4nSZI2g0NJ
        krQ2HEqSpLXhUJIkrQ2HkiRpbTiUJEnT/BvNm8KhJEma4nv0nzeDQ0mSNBxF/1wTOJQkSUO9i/7523Ao
        SZKGORL9e7fgUJIkDXEm+vcvw6EkSeruSvT7XIJDSZLU1Z3o9zsNh5IkqZsW0e97Cg4lSVIXLaPf/zAc
        SpKk5npEf84hOJQkSU31jP68j3AoSZKaGRH9uW/hUJIkNTEy+vNfwqEkSbptRrQHwqEkSbplZrTPExxK
        kqTLKkR7PcChJEm6pFK03184lCRJp1WM9vwFh5Ik6ZTK0b7+BUCSpJsSetr7aSBJkg5L6mH3h19IkqTD
        0nrY/+EXkiTpkMQebnj4hSRJ+iixpzueBpIk6aXE6A7/AiBJ0kGJ0R2/4FCSJD1IjO74C4eSJOmvxOiO
        BziUJEm/pEU3IBxKkqS46IaXcChJ0ubSohvewqEkSRtLi274CIeSJG0qLbrhEBxKkrShtOiGw3AoSdJm
        0qIbTsGhJEkbSYtuOA2HkiRtIi264RIcSpK0gbTohstwKEnS4tKiG27BoSRJC0uLbrgNh5IkLSotuqEJ
        HEqStKC06IZmcChJ0mLSohuawqEkSQtJi25oDoeSJC0iLbqhCxxKkrSAtOiGbnAoSVK4tOiGrnAoSVKw
        tOiG7nAoSVKotOiGIXAoSVKgtOiGYXAoSVKYtOiGoXAoSVKQtOiG4XAoSVKItOiGKXAoSVKAtOiGaXAo
        SVJxadENU+FQkqTC0qIbpsOhJElFpUU3lIBDSZIKSotuKAOHkiQVkxbdUAoOJUkqJC26oRwcSpJURFp0
        Q0k4lCSpgLTohrJwKEnSZGnRDaXhUJKkidKiG8rDoSRJk6RFN0TAoSRJE6RFN8TAoSRJg6VFN0TBoSRJ
        A6VFN8TBoSRJg6RFN0TCoSRJA6RFN8TCoSRJnaVFN0TDoSRJHaVFN8TDoSRJnaRFNywBh5IkdZAW3bAM
        HEqS1FhadMNScChJUkNp0Q3LwaEkSY2kRTcsCYeSJDWQFt2wLBxKknRTWnTD0nAoSdINadENy8OhJEkX
        pUU3bAGHkiRdkBbdsA0cSpJ0Ulp0w1ZwKEnSCWnRDdvBoaRYI6I/V/tKi27YEg4llZIc3aN1pEU3bAuH
        kobbMXoH5UiLbtgaDiV1Y5+jd1MtadEN28OhpCasXfS+miMtukH/wKGk02x89Dmor7ToBv2BQ0kfWb3o
        c1I7adEN+gaHkp5YXvQ56pq06Ab9gENJv9g60eerY9KiGwRwKG3K9ok+fz1Li27QCziUNmJG3wvlRTfo
        DRxKizN7FX1fdpQW3aAPcCgtyOxs9D3aQVp0gw7AobQIs1bR92tFadENOgiHUjizXtH3bRVp0Q06AYdS
        ILPR0fcwVVp0g07CoRTErEL03UyRFt2gC3AoFWdWNfq+VpYW3aCLcCgVZZYSfX+rSYtu0A04lAoxS4++
        17OlRTfoJhxKBZitFn3PZ0iLblADOJQmMls9+t6PkhbdoEZwKE1gtlv0c9BTWnSDGsKhNJDZ7tHPRWtp
        0Q1qDIfSAGb2GP2ctJAW3aAOcCh1Ymafo5+dq9KiG9QJDqUOzOxc9HN0Rlp0gzrCodSQmd2Lfq4+SYtu
        UGc4lBows7bRzxlJi27QADiUbjCzvtHP3X/Sohs0CA6lC8xsbOk/gz/312A4lE6wetHn1IrVK/Fz+fm9
        0gQ4lA6w8dHnUJXZq+j7oglwKH1gfaM3X4XtHX0nNAkOpResbfTGu7L1o89dE+FQ+sHaRG8rZmtFn7Em
        w6H0h92L3lTXWG70eaoAHEr/sPPRO6oPy4g+OxWBQ23NjkfvpzmsXvQ5qRAcakt2LHo71WLzo89FxeBQ
        27H30Zspg42PPgcVhENtw15H76Vs1j96dxWFQ23BnqN30pqsffTOKgyHWpo9Rm+kvdj96F1VHA61LPuK
        3kd7s2vRWyoADrUc+x29jUTsWPR2CoFDLcN+R28jHWGvo/dSEBxqCbtHbyJdZY/RGykMDhVt9+hNpJZ2
        j95EgXCoWDtH7yH1tHP0HgqDQ0XaNXoLaaRdo7dQEBwqyo7RO0iz7Rq9hQLgUDF2i95AqmbH6B1UHA5V
        3m7RG0jV7Ra9gQrDoUrbKbpfSrNb9AYqCIcqaafofinZbtEbqBgcqpydovulZDtH76EicKhSdolul9IZ
        v4sKwKHK2CG6W1qBfUXvo8lwqOl2iO6WVmEcvZUmwaGmWj26WX20jH5/MXsfvZkmwKGmWTm6V/dUivbb
        kR2L3k6D4VDDrR7drHMSoztWZueiN9RAONRQK0f36rOVo3tXYNej99QAONQwq0a36r0do3dIZPejd1Vn
        OFR3K0f3itlX9D4JrF30vuoIh+pq1ehWPbPP0btVZO2jd1YnOFQ3q0a36otdj96zAusbvbkaw6G6WDG6
        U1+sXfS+s9iY6O3VEA7V1IrRnfpi/aL3HsnGRp+BGsGhmlkxulM2I/ocerI50WehBnCoJlaLbtRvNjf6
        TFqz+dHnohtwqNtWi26UVYs+oxbSSt79U99v00041C0rRffJKkef1x1prXDDp+hGXYBDXbJadOPuLCf6
        /M5Ki274bqXoPp2EQ522UnTf7iw3+jyPSItuICtF9+kEHOqUlaL7dmf50ef6Tlp0wyerRLfpIBzqsJWi
        +3Zm60Wf809p0Q1HrRTdpw9wqENWiW7bna0bfd7/SYtuuGKV6Da9gUN9tEp0285sn9I/+5/737VKdJte
        wKFeWiW6bXe2X6mf/ffvbUurRLcJ4FBolei23ZmlRN/f1laI7tIPONSTVaLbdmaWFH2He1khukvf4FAP
        Voju2p1ZUvQd7m2F6C79gUP9tUJ01+7MkqLv8EgrRHdtD4f6ZYXort2ZJUXf4RlWiO7aGg4VH90ks6zo
        OzzTCtFd28Lh5tKjm3ZnlhZ9j6tIj27aEg43lh7dtDuztOh7XE16dNN2cLip9Oim3ZmlRd/jqtKjm7aC
        w82kRzfJLC/6HleXHt20DRxuJD26SfYzeqOjbEz09kmSo3u2gMNNpEc3ad/oLXqzNtHbJkqO7lkeDjeQ
        Ht2kvaL7Z7Pz0TsmS47uWRoOF5cc3aPfVo9urs7eR2+2guTonmXhcGHJ0T36smJ0ZyJ7jt5pJcnRPUvC
        4aKSo3v0ZbXoxlUYv8uqUqNbloPDBSVH9+jLStF9q9o1eovVpUa3LAWHi0mO7tGXFaK7drNLdPsuUqNb
        loHDhaRGt+hRenTT7laO7t1NanTLEnC4iNToFj1Kj27SbytGd+4qNbolHg4XkBrdomep0S1iq0S3KTO6
        IxoOw6VGt+hZYnSHjkmO7tGXxOiOWDgMlhrdomeJ0R06JzG6Q88Sozsi4TBUanSLnqVFN+ia1OgWPUuM
        7oiDw0Cp0S1iSdH+uiY5ukcsMbojCg7DJEZ36LWUaHddt0J0l1hidEcMHAZJjO7QaynR7rpupeg+scTo
        jgg4DJEY3aH3EqK9dd1q0Y16LTG6ozwcBkiM7tB7CdHeum7V6Fa9lhjdURoOi0uM7tB7CdHeumaH6G69
        lxbdUBYOC0uM7tBn1aOddc0u0e36LC26oSQcFpUY3aHPqkc765rdojfQZ2nRDeXgsKDE6A4dUznaV9fs
        GL2DjkmLbigFhwWlRTfomMrRvrpm5+g9dExadEMZOCwmLbpBx1WNdtU1u0dvouPSohtKwGEhadENOq5q
        tKuusd/R2+i4tOiG6XBYRFp0g86pGO2pa+wxeiMdlxbdMBUOC0iLbtA5FaM9dY09R++kc5Ki/afC4WRp
        0Q06p2K0p66x19F76ZykaP9pcDhRWnSDzqsW7ahr7H30ZjovKdp/ChxOkhbdoGuqRTvqPPscvZuuSYr2
        Hw6HE6RFN+iaatGOOs+OR++na5Ki/YfC4WBp0Q26rlK0n86zc9Eb6rqkaP9hcDhYUrS/rqsW7ahz7Fr0
        lrouKdp/CBwOlBTtr3sqRfvpHLsevafuSYr27w6HgyRF++ueStF+Oiexanv/fFPdlxLt3h0OB0iK9td9
        laL9dFxiFXf//qZqJyXavSscdpYU7a82qkS76bjEqt7wcy+1kxLt3g0OO0qK9lcblaL9dExidMe/qkS7
        qY2UaPcucNhJUrS/2qkS7aZjEqM7/lMl2k3tpES7N4fDDpKi/dVWhWgvHZMY3fFThWgvtZUS7d4UDjtI
        iXZXW1Wi3fRZYnQHqRLtprZSot2bwWFjKdHuaq9CtJc+S4zueKdCtJfaS4j2bgaHDaVEu6uPCtFeei8x
        uuOTCtFe6iMh2rsJHDaSEu2uPqpEu+m1xOiOoypEe6m9lGj323DYQEq0u/qpEO2l1xKjO86oEO2lPlKi
        3W/B4U0p0e7qq0K0l1hidMdZFaK91E9KtPtlOLwpIdpbfVWI9hJLjO64qkK0l/pJiXa/BIc3JER7q78K
        0V56lhjdcUeFaC/1lRDtfQkOL0qI9tYYs6Od9CwxuqOF2dFO6i8h2vs0HF6QEO2tcWZHO+lRYnRHK7Oj
        nTRGQrT3KTg8KSHaW2PNjnbSl8TojpYqRHtpjIRo78NweEJKtLvGmR3tpC+J0R09zI520jgJ0d6H4PCE
        hGhvjTU72km/JUZ39DI72kljVY92PgSHByVEe2u82dFOyozu6Gl2tJPGSoj2/giHByREe2uO2dFOu0uM
        7uhtdrSTxkuI9n4Lhx8kRHtrnpnRPrtLjO4YZXa0k8ZLiPZ+CYcfVI921jyzo512lhjdMdLsaCfNkRDt
        jXD4RvVoZ801O9ppV4nRHaPNjnbSPNWjnREOX6ge7az5Zkc77SgxumOG2dFOmqt6tPMTHIKEaG/NNzPa
        Z0eJ0R0zzYz20XzVo50f4BBUj3ZWDTOjfXaTGN0x28xoH9VQPdr5Lxz+UD3aWXXMjPbZSWJ0RwUzo31U
        Q/Vo579w+E31aGfVMjPaZxeJ0R1VzIz2UR3Vo51/weEf1aOdVc/MaJ8dJEZ3VDI72kl1VI92jv0LAO2r
        emZHO60uMbqjmtnRTqqlcrTvy78AVI92Vj2zo51WlhjdUdXMaB/VU7mnfZ8G/6ge7ayaZkb7rCwxuqOy
        mdE+qqd6D/s+/OIf1fu5r2qbGe2zqsTojupmRvuopur93fX70v+q3M9dVd/MaJ8VJUZ3JJgZ7aO6Kvd3
        z7iFFWVmtM9qEqM7UsyM9lFtlfu1Y8yiijQz2mclidEdSWZG+6i+yvkXAHU1M9pnFYnRHWlmRvsoQ9V+
        /QWgcj8fUllmRvusIDG6I9HMaB9lKFvl5X4+ovLMjPZJlxjdkWpmtI9ylKzsYn/6+YjKMjPaJ1lidEey
        mdE+ylC28gv+0/eHVJaZ0T6pEqM70s2M9lGGqvk/AlRXM6N9EiVGd6xgZrSP6quc/z8A6mpmtE+axOiO
        VcyM9lFtlfu1Y9zCijIz2idJYnTHSmZG+6iuyv3d8/vC/6rez31V28xonxSJ0R2rmRnto5qq93fX70v/
        p3q0s2qaGe2TIDG6Y0Uzo31UU+Uedn34xTeVo31V0+xop8oSoztWNTPaR/VU7mnfp8E3laN9Vc/saKeq
        EqM7VjU72km1VO9p56fBN9WjnVXL7GinihKjO1Y2O9pJdVSPdn77F4B/VY92Vi0zo32qSYzuWN3MaB/V
        UT3a+Rcc/lA92ll1zIz2qSQxumMHM6N9VEP1aOe/cPhDQrS3apgZ7VNFYnTHLmZG+6iG6tHOf+EQVI92
        Vg0zo30qSIzu2MnMaB/NVz3a+QEOX6ge7az5Zkc7zZQY3bGT2dFOmqt6tPMTHL5RPdpZc82OdpolMbpj
        N7OjnTRP9WhnhMM3EqK9Nc/saKcZEqM7djQ72klzJER7Ixx+kBDtrXlmRvuMlhjdsavZ0U4aLyHa+yUc
        HpAQ7a05Zkc7jZIY3bGr2dFOGi8h2vstHB6UEO2t8WZHO42QGN2xs9nRThqverTzRzg8ISHaW2PNjnbq
        LTG6Y3ezo500VvVo50NweEJCtLfGmh3t1FNidIfmRztpnIRo70NweFJCtLfGqRDt1UNidIdqRHtpjIRo
        78NweEFCtLfGmR3t1FpidId+mx3tpDESor1PweFFCdHeGmN2tFNLidEd+jI72kn9JUR7n4bDGxKivdVf
        hWivFhKjO/SlQrSX+kqJdj8NhzekRLurrwrRXnclRnfoUYVoL/WTEu1+CQ5vSol2V18Vor2uSozu0KMK
        0V7qJyXa/TIcNpAS7a5+KkR7XZEY3aFnFaK91EdKtPstOGwkJdpdfVSJdjsjMbpDrEK0l/pIiPa+DYcN
        pUS7q48K0V5HJUZ3iFWI9lIfCdHeTeCwsZRod7VXIdrriMToDr1WIdpL7aVEuzeBw8aSov3VVpVot3cS
        ozv0WpVoN7WVEu3eDA47SIr2V1sVor1eSYzu0HsVor3UVkq0e1M47CQl2l1tVYl2+ykxukPvVYl2Uzsp
        0e7N4bCjlGh3tVMl2u27xOgOfVYl2k1tpES7d4HDzlKi3dVOlWi3fyVGd+izKtFuaiMl2r0bHA6QEu2u
        NipVebej/bxBx1SK9tN9KdHuXeFwkJRod91Xqap7He37/jqnUrSf7kmK9u8KhwOlRLvrvkpV2+doP99U
        x1WK9tM9SdH+3eFwoKRof91j96I31XGVov10XVK0/xA4HCwp2l/32LXoLXVcpWg/XZcU7T8MDidIivbX
        dXY+ekcdVy3aUdckRfsPhcNJkqL9dZ0dj95Px1WM9tR5SdH+w+FwoqRof11jx6K30znVoh11XlK0/xQ4
        nCwp2l/n2fvozXRexWhPnZMU7T8NDgtIivbXecbRW+m8itGeOictumEaHBaRFt2g4+w5eiedVzXaVcel
        RTdMhcNC0qIbdJx9Re+j86pGu+q4tOiG6XBYTFp0g46x39Hb6Jqq0a46Ji26oQQcFpMY3aFjdo/eRNdU
        jXbVMWnRDWXgsKDE6A4ds2v0FrqmarSrjkmLbigFh0UlRnfosx2jd9A1laN99VladEM5OCwsMbpDn+0U
        3a9rKkf76rO06IaScFhcYnSH3tslul3XVI921ntp0Q1l4TBAYnSH3ls9ulnnJUR767206IbScBgiMbpD
        760a3arzEqK99VpidEd5OAySGN2h11aM7tR5KdHuYonRHRFwGCYxukOvrRTdp/NSot3FEqM7YuAwUGJ0
        h15bIbpL5yRF+4slRndEwWGo1OgWPUuPbtI5adENepYY3REHh8FSo1v0LDW6ReekRTfoWWJ0RyQchkuN
        btGzxOgOHZMY3aFnidEdsXC4gNToFn1Jj24SS47u0aPE6I5oOFxEanSL1olu06Pk6B59SY1uiYfDhaRG
        t+xsxejO3aVHN+lLanTLEnC4mNTolh2tHt28mxWiu/QlNbplGThcUHJ0zy52iu5f3SrRbfqSGt2yFBwu
        Kjm6Z3U7R++xitWiG/UlNbplOThcWHJ0z6rsd/Q2qVaNbtVvqdEtS8Lh4pKje1ZjHL1VdatHNys7umdZ
        ONxAcnTPKux49H6z7RTdr+zonqXhcBPp0U3J7F70pr3tGr2FsqN7lofDjaRHNyWyftF7n2Vf0fsoO7pn
        CzjcTHp0UxKzlOj7u7v06KZt4HBD6dFNCcxSou/v7tKjm7aCw42lRzdVZZYSfX93lx7dtB0cbi49uqka
        s5To+7u79OimLeFQ8dFNVZilRN/fna0Q3bUtHOqXFaK7ZjJLiL67u1shumtrONRfK0R3zWCWEH13d7dC
        dNf2cKgHK0R3jWSWEH13d7ZKdJv+gUM9WSW6rTezhOi7u7MVorv0DQ6FVolu68UsIfru7myF6C79gEO9
        tEp0W2tm1aPv7c5WiW4TwKHeWim6r4W0Uve2633/vmqd6Da9gEMdskp02x1prXCDHY8+792tEt2mN3Co
        w1aJbrsiLbrhP7Ze9DnvbKXoPn2AQ52yUnTfUWnRDcTyo891dytF9+kAHOq0laL7PkmLbnjHcqPPc2cr
        RffpBBzqktWiG0ladMNRlhN9frtbKbpPJ+FQt6wU3fddWnTDFVY3+rx2t1p0oy7AoW5brRVupBvusHrR
        57S71aIbdREO1cRqJd/2fffWbH70uexuxehO3YBDNWPzo8+lBxsffQ5aM7pTN+FQTdm86PPozfpH7641
        ozvVCA7VhY2NPoPRrF30vvqyYnSnGsKhurEx0dvPZNej99SXVaNb1RgO1ZX1jd68EvscvZuerRrdqg5w
        qO6sT/TWVdlj9EZiq0a3qiMcahhrF71vkh2jd9BrK0f3qjMcaii7H71rspWje/XZytG9GgCHGs6uR++5
        muToHh23enSzBsGhprDz0TvuomK0p65ZPbpZg+FQU9mx6O30pUf056i91aObNQEONZ29j95MSrdDdLcm
        waFKMI7eSkq2Q3S3JsOhSrGv6H2kVLtEt6sAHKoc43eREu0U3a8icKiSdo7eQ0qzU3S/isGhStstegMp
        zU7R/SoIhypvt+gNpOp2jN5BReFQMXaM3kGqZMfoHVQcDhVl1+gtpJl2jd5CAXCoODtH7yGNtGv0FgqC
        Q8XaOXoPqaedo/dQGBwq2u7Rm0gt7Ry9h0LhUPGM30W6Y/foTRQMh4pmz9E7SUcYv4sWgEPFsvfRm0nE
        fkdvo0XgUJHsXPSG2pt9Re+jxeBQcex69J7aiz1Gb6QF4VBRrF30vlqTPUfvpIXhUDGsX/Teymavo/fS
        4nCoCDYuen9lsPfRm2kTOFR5Ni/6PFSLHYveThvBoUqzOtHnoznsePR+2hAOVZbVjT4v9WXnojfUxnCo
        kiwr+gx1j12P3lObw6HKsfzoc9V7dj96V+kXHKoUWzf6vHdlbaM3lh7gUGXYftH3YDXWN3pz6QkOVYLZ
        z+h7UpWNjz4H6SUcajqzq9H3qTWrFX1G0kc41FRppe5tlt73/96QTsOhpklrhRvM0qKfO+k0HGqKtOiG
        /5hZ++hnTboMhxouLbqBmFmb6OdLugWHGiotuuETM7sW/TxJTeBQw6RFN5xhZseinx+pKRxqiLTohqvM
        jKOfF6kLHKq7tOiGFszsd/TzIXWFQ3WVFt3QmtmO0c+CNAwO1U1adENvZqtH33tpOByqi7TohpHMVou+
        59I0OFRzadENs5ilR99raTocqqm06IYqzJKi77BUBg7VTFp0Q0VmVaPvq1QSDtVEWnRDdWZVou+nVBoO
        dVtadEMas9HR91CKgUPdkhbdkMysd/S9k+LgUJelRTesxKxV9P2SouFQl6RFN6zM7Gz0PZKWgUOdlhbd
        sBOzV9H3RVoSDnVKWnTDzszoeyEtD4c6LC26QV9sn+jzl7aCQx2SFt2g12y96HOWtoVDfZQW3aBzLC/6
        HCX9gUO9lRbdoPusXvQ5SXoBh3opLbpBfdj46HOQdBAOhdKiGzSOtY/eWdJFONSTtOgGzWfHo/eT1BAO
        9SAtukG17Ry9h6QBcKi/0qIblG2F6C5Jk+FQv6RFN2gfM6I9JIXAoeKiGyRJegmHm0uLbpAk6S0cbiwt
        ukGSpI9wuKm06AZJkg7B4YbSohskSToMh5tJi26QJOkUHG4kLbpBkqTTcLiJtOgGSZIuweEG0qIbJEm6
        DIeLS4tukCTpFhwuLC26QZKk23C4qLToBkmSmsDhgtKiGyRJagaHi0mLbpAkqSkcLiQtukGSpOZwuIi0
        6AZJkrrA4QLSohskSeoGh+HSohskSeoKh8HSohskSeoOh6HSohskSRoCh4HSohskSRoGh2HSohskSRoK
        h0HSohskSRoOhyHSohskSZoChwHSohskSZoGh8WlRTdIkjQVDgtLi26QJGk6HBaVFt0gSVIJOCwoLbpB
        kqQycFhMWnSDJEml4LCQtOgGSZLKwWERadENkiSVhMMC0qIbJEkqC4eTpUU3SJJUGg4nSotukCSpPBxO
        khbdIElSBBxOkBbdIElSDBwOlhbdIElSFBwOlBbdIElSHBwOkhbdIElSJBwOkBbdIElSLBx2lhbdIElS
        NBx2lBbdIElSPBx2khbdIEnSEnDYQVp0gyRJy8BhQ4nRHZIkLQWHjSRGd0iStBwcNpAY3SFJ0pJweFNi
        dIckScvC4Q2J0R2SJC0NhxclRndIkrQ8HF6QGN0hSdIWcHhSYnSHJEnbwOEJidEdkiRtBYcHJUZ3SJK0
        HRwekBjdIUnSlnD4QWJ0hyRJ28LhG4nRHZIkbQ2HLyRGd0iStD0cgsToDkmS9A8c/pAY3SFJkv7A4TeJ
        0R2SJOkbHP6RGN0hSZJ+wOE/EqM7JEkSwOEfSdH+kiTpBRx+kxDtLUmS3sDhD5WjfSVJ0gc4BBWjPSVJ
        0gE4fKFStJ8kSToIh29UiPaSJEkn4PCDmdE+kiTpJBweMCPaQ5IkXYDDg0ZGf74kSboIhyeMiP5cSZJ0
        Aw5P6hn9eZIk6SYcXtAj+nMkSVIDOLyoZfT7S5KkRnB4Q4vo95UkSQ3h8KY70e8nSZIaw2EDV6LfR5Ik
        dYDDRs5E/74kSeoEhw0dif49SZLUEQ4bexf985IkqTMcdkDRPydJkgbAYSffo/9ckiQNgsOO/o3mkiRp
        IBxKkqS14VCSJK0Nh5IkaW04lCRJa8OhJEla2f/+7/8BvIQaKvFSDBIAAAAASUVORK5CYII=
</value>
  </data>
</root>